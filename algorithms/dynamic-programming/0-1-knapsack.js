// 0-1背包问题
// https://mp.weixin.qq.com/s/RXfnhSpVBmVneQjDSUSAVQ

// 给你一个可装载重量为W的背包和N个物品，每个物品有重量和价值两个属性。
// 其中第i个物品的重量为wt[i]，价值为val[i]，
// 现在让你用这个背包装物品，最多能装的价值是多少？
// 举个简单的例子，输入如下：

// N = 3, W = 4
// wt = [2, 1, 3]
// val = [4, 2, 3]

/**
 * 解题框架：step 1
 */
// for 状态1 in 状态1的所有取值：
//     for 状态2 in 状态2的所有取值：
//         for ...
//             dp[状态1][状态2][...] = 择优(选择1，选择2...)

/**
 * 解题框架：step 2
 */
// dp[N+1][W+1]

// dp[0][..] = 0
// dp[..][0] = 0

// for n in [1..N]:
//   for w in [1..W]:
//     dp[n][w] = Max(
//       把 n 装进背包，
//       不把 n 装进背包
//     )
// return dp[N][W]

// n 应该是从 1 开始计数的，0 当作边界处理为 0
// 不装 = dp[n-1][w]
// 装 = dp[n-1][w - wt[n-1]] + val[n-1]
